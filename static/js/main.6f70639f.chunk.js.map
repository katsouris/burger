{"version":3,"sources":["assets/Image/burger-logo.png","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SIdeDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","aux","props","children","logo","react_default","a","createElement","className","classes","Logo","src","Burgerlogo","alt","navigationitem","NavigationItem","NavLink","exact","to","link","activeClassName","active","navigationItems","NavigationItems","NavigationItem_NavigationItem","toolbar","Toolbar","DrawerToggle","onClick","open","Logo_Logo","DesktopOnly","NavigationItems_NavigationItems","backdrop","show","Backdrop","clicked","sideDrawer","attachedClasses","SideDrawer","Close","opened","Open","Aux","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerOpenedHandler","Toolbar_Toolbar","this","SIdeDrawer_SideDrawer","Content","Component","BurgerIngredient","ingredient","types","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","price","Less","removed","disabled","More","added","controls","buildControls","BuildControls","toFixed","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","ModalClosed","style","transform","opacity","button","Button","Btntype","orderSummary","ingredientSummary","textTransform","Button_Button","continued","canceled","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInteceptor","interceptors","request","use","req","resInteceptor","response","res","eject","UI_Modal_Modal","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loader","addIngredientHandler","type","updatedCount","updatedIngredients","objectSpread","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","purchasingHandler","cancelHandler","continueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","componentDidMount","get","then","data","catch","sum","disabledInfo","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","OrderSummary","checkoutSummary","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","input","inputElement","elementType","assign","InputElement","elementConfig","onChange","changed","options","option","displayValue","Input","contactData","orderForm","name","placeholder","surname","age","email","deliveryMethod","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","inputChangedHandler","inputIndentifier","updatedOrderForm","updatedOrderFormElement","target","formElementArray","id","config","form","formElement","Input_Input","ContactData","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","param","err","return","CheckoutSummary_CheckoutSummary","Route","path","match","url","render","ContactData_ContactData","ingredientName","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","witherrorHandler","orders","loading","fetchedOrders","Order_Order","App","BrowserRouter","hoc_Layout_Layout","Switch","component","Orders","BurgerBuilder","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f70639f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const aux=(props)=>props.children;\n\n\n\nexport default aux;\n\n","import React from 'react';\nimport classes from './Logo.css';\nimport Burgerlogo from '../../assets/Image/burger-logo.png';\n\n\nconst logo = () =>(\n    <div className={classes.Logo}>\n        <img src={Burgerlogo} alt=\"BurgerLogo\"/>\n\n    </div>\n\n\n);\n\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.css';\nimport { NavLink } from 'react-router-dom';\n\nconst navigationitem=(props)=>(\n    <li className={classes.NavigationItem} >\n        <NavLink exact={props.exact} to={props.link}\n        activeClassName={classes.active}>{props.children} </NavLink>\n    </li>\n\n\n\n);\n\nexport default navigationitem;","import React from 'react';\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\nconst navigationItems=(props)=>(\n    <ul className={classes.NavigationItems}>\n        <NavigationItem exact link=\"/\">My burger </NavigationItem>\n        <NavigationItem link=\"/orders\" >Orders</NavigationItem>\n\n\n    </ul>\n\n\n);\n\n\nexport default navigationItems;","import React from 'react';\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\n\nconst toolbar=(props)=>(\n\n    <header className={classes.Toolbar}>\n        <div className={classes.DrawerToggle} onClick={props.open}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n        <div className={classes.Logo}>\n        <Logo/>\n        </div>\n        <nav className={classes.DesktopOnly}>\n           <NavigationItems/>\n        </nav>\n    </header>\n\n\n\n\n);\n\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst backdrop= (props)=>(\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n\n\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer=(props)=>{\n    let attachedClasses=[classes.SideDrawer, classes.Close];\n    if (props.opened){\n        attachedClasses=[classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backrop show={props.opened} clicked={props.closed}/>\n                <div className={attachedClasses.join(' ')}>\n                    <div className={classes.Logo}>\n                    <Logo />\n                    </div>\n                    <nav className={classes.DesktopOnly}>\n                        <NavigationItems />\n                    </nav>\n\n\n                </div>\n        </Aux>\n    );\n\n}\n\n\n\nexport default sideDrawer;","import React,{Component} from 'react';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SIdeDrawer/SideDrawer';\n\n\nclass Layout extends Component{\n    state={\n        showSideDrawer : false\n\n    }\n\n\n    sideDrawerClosedHandler=()=>{\n        this.setState({ showSideDrawer : false});\n\n    }\n    sideDrawerOpenedHandler=()=>{\n        this.setState({ showSideDrawer : true});\n\n    }\n\n\n\n    render() {\n        return(\n                 <Aux>\n                     <Toolbar open={this.sideDrawerOpenedHandler}/>\n                     <SideDrawer opened={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\n                     <main className={classes.Content}>\n                         {this.props.children}\n                     </main>\n                 </Aux>\n        );\n\n    }\n}\n\nexport default Layout;","import React,{Component} from 'react';\nimport classes from './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component{\n    render(){\n        let ingredient= null;\n\n        switch(this.props.types) {\n            case('bread-bottom'):\n                ingredient=<div className={classes.BreadBottom}></div>;\n                break;\n            case('bread-top'):\n                ingredient=(\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case('meat'):\n                ingredient=<div className={classes.Meat}></div>;\n                break;\n            case('cheese'):\n                ingredient=<div className={classes.Cheese}></div>;\n                break;\n            case('bacon'):\n                ingredient=<div className={classes.Bacon}></div>;\n                break;\n            case('salad'):\n                ingredient=<div className={classes.Salad}></div>;\n                break;\n            default:\n                ingredient=null;\n\n\n\n\n        }\n        return ingredient;\n\n\n    }\n\n}\n\n\n\n\n\n\nBurgerIngredient.propTypes={\n    types: PropTypes.string.isRequired\n\n\n\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger=(props)=>{\n    let transformedIngredients = Object.keys(props.ingredients).map( igKey =>{\n           return [...Array(props.ingredients[igKey])].map((_,i) => {\n               return <BurgerIngredient key={igKey + i } types={igKey} />;\n\n            } );\n        } )\n\n\n    .reduce((arr, el)=>{\n      return arr.concat(el)\n\n\n    },[]);\n    if(transformedIngredients.length===0){\n        transformedIngredients=<p>Please add ingredients</p>;\n\n    }\n\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient types=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient types=\"bread-bottom\" />\n        </div>\n\n    );\n\n\n\n};\n\n\nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.css';\n\nconst buildControl= (props)=>(\n\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <p>Current Price: {props.price}</p>\n                <button className={classes.Less}\n                onClick={props.removed}\n                disabled={props.disabled}>Less </button>\n                <button className={classes.More}\n                onClick={props.added}>More </button>\n        </div>\n\n\n\n\n\n);\n\n\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\nconst controls=[\n    {label:\"Salad\", types:\"salad\"},\n    {label:\"Meat\", types:\"meat\"},\n    {label:\"Cheese\", types:\"cheese\"},\n    {label:'Bacon', types:\"bacon\"}\n];\nconst buildControls= (props)=>(\n\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strorng>{props.price.toFixed(2)}</strorng></p>\n        {controls.map(ctrl=>(\n            <BuildControl\n                key={ctrl.label}\n                label={ctrl.label}\n            added={()=>props.ingredientAdded(ctrl.types)}\n            removed={()=>props.ingredientRemoved(ctrl.types)}\n            disabled={props.disabled[ctrl.types]}/>\n\n\n        ))}\n        <button className={classes.OrderButton}\n        disabled={!props.purchasable}\n        onClick={props.ordered}>Order now</button>\n\n    </div>\n\n\n\n\n);\n\n\n\nexport default buildControls;","import React,{Component} from 'react';\nimport classes from './Modal.css';\nimport Backdrop from '../Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\n\nclass Modal extends  Component{\n    shouldComponentUpdate(nextProps, nextState){\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n\n    }\n\n    componentWillUpdate(){\n        console.log('[Modal] willupdate');\n\n    }\n    render(){\n        return(\n    <Aux>\n        <Backdrop show={this.props.show} clicked={this.props.ModalClosed}/>\n        <div\n            style={{transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: this.props.show ? '1' : '0'}}\n            className={classes.Modal}>\n            {this.props.children}\n        </div>\n    </Aux>\n\n        );\n\n    }\n\n\n}\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = (props) =>(\n    <button onClick={props.clicked} className={[classes.Button, classes[props.Btntype]].join(' ')}>\n        {props.children}\n    </button>\n\n\n);\n\nexport default button;","import React from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\n\nconst orderSummary = (props) =>{\n    const ingredientSummary =Object.keys(props.ingredients)\n        .map(igKey =>{\n            return <li key={igKey}><span style={{textTransform: 'capitalize'}}>{igKey}: {props.ingredients[igKey]}</span></li>\n\n        });\n\n    return(\n       <Aux>\n            <h3>Your Order</h3>\n           <p>Adelicious burger with the following ingredients:</p>\n           <ul>\n               {ingredientSummary}\n           </ul>\n           <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\n            <p>Continue Checkout?</p>\n           <Button Btntype=\"Success\" clicked={props.continued}>OK </Button>\n           <Button Btntype=\"Danger\" clicked={props.canceled}>Cancel </Button>\n\n       </Aux>\n    );\n\n};\n\n\nexport default orderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n   baseURL: 'https://burger-b5885.firebaseio.com/'\n\n});\n\nexport default instance;","import React from 'react';\nimport classes from './Spinner.css';\nconst spinner=()=>(\n<div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React,{Component} from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Modal from '../../components/UI/Modal/Modal';\nconst withErrorHandler=(WrappedComponent, axios)=> {\n    return class extends Component {\n        state = {\n        error: null\n\n        }\n\n        componentWillMount(){\n            this.reqInteceptor=axios.interceptors.request.use(req=> {\n                this.setState({error:null});\n                return req;\n\n            })\n            this.resInteceptor= axios.interceptors.response.use(res => res, error =>{\n            this.setState({error:error});\n\n            })\n\n        }\n        errorConfirmedHandler =() =>{\n            this.setState({error:null})\n\n        }\n        componentWillUnmount(){\n            axios.interceptors.request.eject( this.reqInteceptor);\n            axios.interceptors.request.eject( this.resInteceptor);\n\n        }\n        render() {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        clicked={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message :null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n\n                </Aux>\n            )}\n\n        }\n}\n\n\n\n\n\n\nexport default withErrorHandler;","import React,{Component} from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n\n};\nclass BurgerBuilder extends Component{\n    state={\n        ingredients: null,\n        totalPrice: 4,\n        purchasable: false,\n        purchasing: false,\n        loader: false,\n        error:false\n\n    };\n\n    updatePurchaseState(ingredients){\n        const sum = Object.keys(ingredients)\n            .map(igKey=>{\n                return ingredients[igKey];\n\n\n            })\n            .reduce((sum, el)=>{\n                return sum +el;\n        },0);\n        this.setState({purchasable: sum > 0});\n    }\n    addIngredientHandler=(type)=>{\n        const oldCount = this.state.ingredients[type];\n        const updatedCount= oldCount +1;\n        const updatedIngredients ={\n            ...this.state.ingredients\n\n        };\n        updatedIngredients[type]= updatedCount;\n        const priceAddition= INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n\n    };\n    removeIngredientHandler=(type)=>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount<= 0){\n            return;\n        }\n        const updatedCount= oldCount -1;\n        const updatedIngredients ={\n            ...this.state.ingredients\n\n        };\n        updatedIngredients[type]= updatedCount;\n        const priceAddition= INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    };\n    purchasingHandler=()=>{\n        this.setState({purchasing: true});\n\n\n\n    };\n    cancelHandler=()=>{\n        this.setState({purchasing: false})\n    };\n    continueHandler =()=>{\n        const queryParams= [];\n        for(let i in this.state.ingredients){\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price=' + this.state.totalPrice);\n        const queryString= queryParams.join('&')\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n\n    };\n    componentDidMount=()=>{\n        axios.get('https://burger-b5885.firebaseio.com/ingredients.json')\n            .then(response=> {\n                this.setState({ingredients: response.data})\n            }).catch(error=>{\n                this.setState({error: true})\n        })};\n\n\n    render() {\n        const disabledInfo={\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo){\n        disabledInfo[key]= disabledInfo[key]<=0;\n\n        }\n        let orderSummary = null;\n        let burger =this.state.error ? <p>Ingredients cant be loaded</p> : <Spinner />;\n        if(this.state.ingredients) {\n            burger = (<Aux>\n                <Burger ingredients={this.state.ingredients}/>\n\n                <BuildControls\n                    disabled={disabledInfo}\n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    price={this.state.totalPrice}\n                    purchasable={this.state.purchasable}\n                    ordered={this.purchasingHandler}/>\n            </Aux>);\n            orderSummary= (\n                        <OrderSummary ingredients={this.state.ingredients}\n                          continued={this.continueHandler}\n                          canceled={this.cancelHandler}\n                          price={this.state.totalPrice}/>);\n        }\n        if(this.state.loader){\n            orderSummary = <Spinner />;\n        }\n\n        return(\n\n            <Aux>\n                <Modal show={this.state.purchasing}  ModalClosed={this.cancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n\n            </Aux>\n\n        );\n    }\n\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","import React from'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary =(props) =>{\n    return(\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it taste good</h1>\n            <div style={{width:'100%', margin:'auto'}}>\n            <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button Btntype=\"Danger\" clicked={props.checkoutCanceled}> CANCEL</Button>\n            <Button Btntype=\"Success\" clicked={props.checkoutContinued}> OK</Button>\n\n        </div>\n\n    );\n}\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.css';\n\nconst input=(props)=>{\n    let inputElement=null;\n    switch(props.elementType){\n        case ('input') :\n            inputElement=<input className={classes.InputElement}\n                                {...props.elementConfig}\n                                value={props.value}\n                                onChange={props.changed}/>\n            break;\n        case ('textarea') :\n            inputElement=<textarea className={classes.InputElement}\n                                   {...props.elementConfig}\n                                   value={props.value}\n                                onChange={props.changed}/>\n            break;\n        case ('select') :\n            inputElement=(<select className={classes.InputElement}\n                                  value={props.value}\n                                    onChange={props.changed}>\n                                 {props.elementConfig.options.map(option =>(\n                                     <option key={option.value} value={option.value}>\n                                         {option.displayValue}\n                                     </option>\n                                 ))}>\n                        </select>\n            );\n            break;\n        default :\n            inputElement=<input className={classes.InputElement}\n                                {...props.elementConfig}\n                                value={props.value}\n                                onChange={props.changed}/>\n\n    }\n    return(\n        <div className={classes.Input} >\n            <label className={classes.Label}> {props.label} </label>\n            {inputElement}\n        </div>\n    );\n}\n\nexport default input;","import React,{Component} from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.css';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport axios from \"../../../axios-orders\";\nimport Input from '../../../components/UI/Input/Input';\n\n\nclass contactData extends Component{\n    state={\n        orderForm: {\n\n                name : {\n                  elementType: 'input',\n                  elementConfig:{\n                      type: 'text',\n                      placeholder: 'Your name'\n                  },\n                  value: ''\n                },\n                surname: {\n                    elementType: 'input',\n                    elementConfig:{\n                        type: 'text',\n                        placeholder: 'Your surname'\n                    },\n                    value: ''\n                },\n                age: {\n                    elementType: 'input',\n                    elementConfig:{\n                        type: 'text',\n                        placeholder: 'Your age'\n                    },\n                    value: ''\n                },\n                email: {\n                    elementType: 'input',\n                    elementConfig:{\n                        type: 'email',\n                        placeholder: 'Your email'\n                    },\n                    value: ''\n                },\n                deliveryMethod:{\n                    elementType: 'select',\n                    elementConfig:{\n                        options:[\n                            {value: 'fastest', displayValue: 'Fastest'},\n                            {value: 'cheapest', displayValue: 'Cheapest'}\n                            ]\n                    },\n                    value: ''\n                }\n\n\n        },\n        loader: false\n    }\n    orderHandler=(event)=>{\n        event.preventDefault();\n        this.setState({loader:true});\n        //alert('THA FAME MAGKES')\n        const formData ={};\n        for(let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\n        }\n        const order = {\n            ingredients : this.props.ingredients,\n            price : this.props.price,\n            orderData: formData\n\n\n\n        };\n\n        axios.post('/orders.json',order).then(response=>{\n            this.setState({ loader: false})\n            this.props.history.push('/');\n        }).catch(error=>{\n            this.setState({ loader: false})\n        })\n    }\n\n     inputChangedHandler=(event,inputIndentifier)=>{\n        //console.log(event.target.value)\n         let updatedOrderForm={\n             ...this.state.orderForm\n         }\n\n         const updatedOrderFormElement= {\n             ...updatedOrderForm[inputIndentifier]\n        };\n        updatedOrderFormElement.value= event.target.value\n        updatedOrderForm[inputIndentifier] = updatedOrderFormElement\n         this.setState({\n             orderForm: updatedOrderForm\n          })\n\n\n\n    }\n    render(){\n        const formElementArray= [];\n        for(let key in this.state.orderForm){\n            formElementArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form=(\n            <form>\n                {formElementArray.map(formElement=>(\n                    <Input\n                        key={ formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        changed={(event)=>this.inputChangedHandler(event,formElement.id)}/>\n                ))}\n            <Button Btntype=\"Success\" clicked={this.orderHandler} >Order Now</Button>\n        </form>\n        );\n        if(this.state.loader){\n            form= <Spinner />;\n        }\n        return(\n         <div className={classes.ContactData}>\n            <h4>Complete your Order</h4>\n             {form}\n         </div>\n\n        );\n    }\n}\nexport default contactData;","import React,{Component} from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport {Route} from 'react-router-dom';\n\nclass Checkout extends Component{\n    state={\n        ingredients: null,\n        price: 0\n\n\n    }\n    checkoutCanceledHandler=()=>{\n        this.props.history.goBack()\n    }\n    checkoutContinuedHandler=()=>{\n        this.props.history.replace('/checkout/contact-data')\n    }\n    componentWillMount(){\n        const query = new URLSearchParams(this.props.location.search)\n        const ingredients ={};\n        let price=0;\n        for(let param of query.entries()){\n            // ['salad','1']\n            if(param[0]==='price'){\n            price= param[1]\n            }else{ingredients[param[0]] = +param[1];\n            }\n\n        }\n        this.setState({ingredients:ingredients,totalPrice:price})\n    }\n    render(){\n\n        return(\n            <div>\n            <CheckoutSummary\n                checkoutContinued={this.checkoutContinuedHandler}\n                checkoutCanceled={this.checkoutCanceledHandler}\n                ingredients={this.state.ingredients}/>\n                <Route path={this.props.match.url + \"/contact-data\"} render={(props)=>(<ContactData  ingredients={this.state.ingredients} price={this.state.totalPrice} {...props}/>)}   />\n\n            </div>\n        );\n\n    }\n\n}\nexport default  Checkout;","import React from 'react';\nimport classes from './Order.css';\n\nconst order=(props)=>{\n    const ingredients= [];\n\n    for(let ingredientName in props.ingredients){\n        ingredients.push({\n            name:ingredientName,\n            amount: props.ingredients[ingredientName]})\n    }\n\n    const ingredientOutput= ingredients.map(ig =>{\n       return <span style={{\n           textTransform: 'capitalize',\n           display: 'inline-block',\n           margin:'0 8px',\n           border: '1px solid #ccc',\n           padding: '5px'}}> {ig.name} {ig.amount}</span>\n    });\n   return(\n       <div className={classes.Order}>\n           <p>Your Ingredients: {ingredientOutput} </p>\n           <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}  </strong> </p>\n       </div>\n   );\n}\n\nexport default order;","import React,{Component} from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport witherrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nclass orders extends Component {\n    state={\n        orders:[],\n        loading:true\n    }\n    componentDidMount(){\n        axios.get('/orders.json')\n            .then(res=>{\n                const fetchedOrders=[];\n                for(let key in res.data){\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id:key\n                    });\n                }\n                console.log(res.data);\n                this.setState({loading:false, orders: fetchedOrders})\n\n            }).catch(err=>{\n                this.setState({loading:false})\n        })\n    }\n    render(){\n        return(\n            <div>\n                {this.state.orders.map(order =>(\n                    <Order\n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price}\n                    />\n                ))}\n\n            </div>\n        );\n    }\n}\n\nexport default witherrorHandler(orders, axios);","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n         <BrowserRouter>\n          <Layout>\n           <Switch>\n           <Route path=\"/checkout\" component={Checkout}/>\n           <Route path=\"/orders\" component={Orders} />\n           <Route  path=\"/\" component={BurgerBuilder}/>\n           </Switch>\n          </Layout>\n         </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}